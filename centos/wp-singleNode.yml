heat_template_version: '2014-10-16'

description: >
  HOT template to create single Wordpress instance on OTC
  Creates new router and private subnet, new security group
  Downloads and installs MariaDB, PHP, Apache and Wordpress 

parameters:
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: key_name
  flavor:
    type: string
    description: Instance type for WordPress server
    default: flavor_id
  image:
    type: string
    description: OTC Images
    default: image_id
  public_net_id:
    type: string
    description: ID of OTC public network
    default: public_id
  security_group_name:
    type: string
    description: ID of security group
    default: wp_demo_sg 
  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters
  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters
  db_root_password:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters


resources:
  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: {get_param: security_group_name}
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  wp_demo_instance:
    type: OS::Nova::Server
    depends_on: security_group
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: {get_resource: port}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -x

            yum -y update

            echo "[mariadb]" > /etc/yum.repos.d/MariaDB.repo
            echo "name = MariaDB" >> /etc/yum.repos.d/MariaDB.repo
            echo "baseurl = http://yum.mariadb.org/10.3/centos7-amd64/" >> /etc/yum.repos.d/MariaDB.repo
            echo "gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB" >> /etc/yum.repos.d/MariaDB.repo
            echo "gpgcheck=1" >> /etc/yum.repos.d/MariaDB.repo

            yum -y install httpd lynx
            yum -y install MariaDB-server
            yum -y erase mariadb-*
            yum -y install MariaDB-server

            systemctl start mariadb
            systemctl enable mariadb

            firewall-cmd --permanent --add-service=http
            firewall-cmd --add-service=http

            # Setup MySQL root password and create a user
            mysqladmin -u root password $db_rootpassword
            cat << EOF | mysql -u root --password=$db_rootpassword
            CREATE DATABASE $db_name;
            GRANT ALL PRIVILEGES ON $db_name.* TO $db_user@localhost IDENTIFIED BY '$db_password';
            FLUSH PRIVILEGES;
            EXIT
            EOF

            # Install Wordpress
            yum -y install wget
            yum install epel-release yum-utils â€“y
            yum install -y http://rpms.remirepo.net/enterprise/remi-release-7.rpm
            sudo yum-config-manager --disable 'remi-php*'
            sudo yum-config-manager --enable remi-php71
            sudo yum-config-manager --enable remi-safe
            sudo yum -y install php php-cli php-curl php-mcrypt php-opcache php-common php-mysql php-gd php-ldap php-odbc php-pear php-xml php-xmlrpc php-mbstring php-snmp php-soap curl
            cd /tmp
            wget https://wordpress.org/latest.tar.gz
            tar -zxvf latest.tar.gz -C /tmp/
            cp -r /tmp/wordpress/* /var/www/html/
            chown -R apache:apache /var/www/html/*
            cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php

            #sed -i "/Deny from All/d" /etc/httpd/conf.d/wordpress.conf
            #sed -i "s/Require local/Require all granted/" /etc/httpd/conf.d/wordpress.conf
            sed -i s/database_name_here/$db_name/ /var/www/html/wp-config.php
            sed -i s/username_here/$db_user/ /var/www/html/wp-config.php
            sed -i s/password_here/$db_password/ /var/www/html/wp-config.php
            sed -i s/localhost/$db_host/ /var/www/html/wp-config.php

            systemctl restart httpd
            systemctl enable httpd
            systemctl restart sshd
          params:
            $db_rootpassword: { get_param: db_root_password }
            $db_name: { get_param: db_name }
            $db_user: { get_param: db_username }
            $db_password: { get_param: db_password }

  port:
    type: OS::Neutron::Port
    depends_on: security_group
    properties:
      network: { get_param: public_net_id }
      security_groups: [ get_resource: security_group ]

outputs:
  PublicIP:
    description: IP address in public network
    value:
      get_param: port
  WebsiteURL:
    description: URL for Wordpress wiki
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_param: port }
