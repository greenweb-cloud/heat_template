heat_template_version: '2014-10-16'

description: >
  HOT template to create single Wordpress instance on OTC
  Creates new router and private subnet, new security group
  Downloads and installs MariaDB, PHP, Apache and Wordpress 

parameters:
  key_name:
    type: string
    description: Name of a KeyPair to enable SSH access to the instance
    default: key_name
  flavor:
    type: string
    description: Instance type for WordPress server
    default: flavor_id
  image:
    type: string
    description: OTC Images
    default: image_id
  public_net_id:
    type: string
    description: ID of OTC public network
    default: public_id
  security_group_name:
    type: string
    description: ID of security group
    default: wp_demo_secgroup 
  db_name:
    type: string
    description: WordPress database name
    default: wordpress
    constraints:
      - length: { min: 1, max: 64 }
        description: db_name must be between 1 and 64 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_name must begin with a letter and contain only alphanumeric
          characters
  db_username:
    type: string
    description: The WordPress database admin account username
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 16 }
        description: db_username must be between 1 and 16 characters
      - allowed_pattern: '[a-zA-Z][a-zA-Z0-9]*'
        description: >
          db_username must begin with a letter and contain only alphanumeric
          characters
  db_password:
    type: string
    description: The WordPress database admin account password
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_password must contain only alphanumeric characters
  db_root_password:
    type: string
    description: Root password for MySQL
    default: admin
    hidden: true
    constraints:
      - length: { min: 1, max: 41 }
        description: db_root_password must be between 1 and 41 characters
      - allowed_pattern: '[a-zA-Z0-9]*'
        description: db_root_password must contain only alphanumeric characters


resources:
  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: {get_param: security_group_name}
      rules:
        - protocol: icmp
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - protocol: tcp
          port_range_min: 443
          port_range_max: 443

  wp_demo_instance:
    type: OS::Nova::Server
    depends_on: security_group
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: {get_resource: port}
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #!/bin/bash -x

            install_dir="/var/www/html"
            #Creating Random WP Database Credenitals
            #db_name="wp`date +%s`"
            #db_user=$db_name
            #db_password=`date |md5sum |cut -c '1-12'`
            #mysqlrootpass=`date |md5sum |cut -c '1-12'`
            
            #### Install Packages for https and mysql
            apt -y update 
            apt -y upgrade
            apt -y install apache2
            apt -y install mysql-server
            
            
            #### Start http
            rm /var/www/html/index.html
            systemctl enable apache2
            systemctl start apache2
            
            #### Start mysql and set root password
            
            systemctl enable mysql
            systemctl start mysql
            
            /usr/bin/mysql -e "USE mysql;"
            /usr/bin/mysql -e "ALTER USER $db_user@'localhost' IDENTIFIED WITH caching_sha2_password BY $db_password;"
            /usr/bin/mysql -e "FLUSH PRIVILEGES;"
            touch /root/.my.cnf
            chmod 640 /root/.my.cnf
            echo "[client]">>/root/.my.cnf
            echo "user=root">>/root/.my.cnf
            echo "password="$db_rootpassword>>/root/.my.cnf
            ####Install PHP
            apt -y install php php-bz2 php-mysqli php-curl php-gd php-intl php-common php-mbstring php-xml
            
            sed -i '0,/AllowOverride\ None/! {0,/AllowOverride\ None/ s/AllowOverride\ None/AllowOverride\ All/}' /etc/apache2/apache2.conf #Allow htaccess usage
            
            systemctl restart apache2
            
            ####Download and extract latest WordPress Package
            if test -f /tmp/latest.tar.gz
            then
            echo "WP is already downloaded."
            else
            echo "Downloading WordPress"
            cd /tmp/ && wget "http://wordpress.org/latest.tar.gz";
            fi
            
            /bin/tar -C $install_dir -zxf /tmp/latest.tar.gz --strip-components=1
            chown www-data: $install_dir -R
            
            #### Create WP-config and set DB credentials
            /bin/mv $install_dir/wp-config-sample.php $install_dir/wp-config.php
            
            /bin/sed -i "s/database_name_here/$db_name/g" $install_dir/wp-config.php
            /bin/sed -i "s/username_here/$db_user/g" $install_dir/wp-config.php
            /bin/sed -i "s/password_here/$db_password/g" $install_dir/wp-config.php
            
            cat << EOF >> $install_dir/wp-config.php
            define('FS_METHOD', 'direct');
            EOF
            
            cat << EOF >> $install_dir/.htaccess
            # BEGIN WordPress
            <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteBase /
            RewriteRule ^index.php$ â€“ [L]
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.php [L]
            </IfModule>
            # END WordPress
            EOF
            
            chown www-data: $install_dir -R
            
            ##### Set WP Salts
            grep -A50 'table_prefix' $install_dir/wp-config.php > /tmp/wp-tmp-config
            /bin/sed -i '/**#@/,/$p/d' $install_dir/wp-config.php
            /usr/bin/lynx --dump -width 200 https://api.wordpress.org/secret-key/1.1/salt/ >> $install_dir/wp-config.php
            /bin/cat /tmp/wp-tmp-config >> $install_dir/wp-config.php && rm /tmp/wp-tmp-config -f
            /usr/bin/mysql -u root -e "CREATE DATABASE $db_name"
            /usr/bin/mysql -u root -e "CREATE USER $db_user@'localhost' IDENTIFIED WITH mysql_native_password BY \"$db_password\";"
            /usr/bin/mysql -u root -e "GRANT ALL PRIVILEGES ON $db_name.* TO $db_user@'localhost';"
             
            ######Display generated passwords to log file.
            echo "Database Name: " $db_name
            echo "Database User: " $db_user
            echo "Database Password: " $db_password
            echo "Mysql root password: " $db_rootpassword

          params:
            $db_rootpassword: { get_param: db_root_password }
            $db_name: { get_param: db_name }
            $db_user: { get_param: db_username }
            $db_password: { get_param: db_password }

  port:
    type: OS::Neutron::Port
    depends_on: security_group
    properties:
      network: { get_param: public_net_id }
      security_groups: [ get_resource: security_group ]

outputs:
  PublicIP:
    description: IP address in public network
    value:
      get_param: port
  WebsiteURL:
    description: URL for Wordpress wiki
    value:
      str_replace:
        template: http://host/wordpress
        params:
          host: { get_param: port }
